buildscript {
    apply from: 'https://raw.githubusercontent.com/FINTlibs/fint-buildscripts/v1.3.0/dependencies.gradle'
    ext {
        springBootVersion = springBootVersion
    }
    repositories {
        jcenter()
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath("com.github.ben-manes:gradle-versions-plugin:0.20.0")
    }
}

apply plugin: 'java'
apply plugin: 'groovy'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'com.github.ben-manes.versions'

group = 'no.fint'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = 1.8

repositories {
    mavenCentral()
    jcenter()
    repositories {
        maven {
            url "http://dl.bintray.com/fint/maven"
        }
    }
    mavenLocal()
}


dependencies {
    compile('no.fint:fint-utdanning-resource-model-java:3.0.0')
    compile('no.fint:fint-administrasjon-resource-model-java:0.99.21-alpha-2')
    compile('no.fint:fint-oauth-token-service:1.1.0')

    compile('org.springframework.boot:spring-boot-starter')
    compile('org.springframework.boot:spring-boot-starter-web')
    compile("org.springframework.boot:spring-boot-starter-data-mongodb:${springBootVersion}")
    compile('org.springframework.plugin:spring-plugin-core')
    compile('com.fasterxml.jackson.core:jackson-databind')
    compile("com.github.springfox.loader:springfox-loader:${springfoxLoaderVersion}")
    compileOnly("org.projectlombok:lombok:${lombokVersion}")

    testCompile('no.fint:fint-test-utils:0.0.4')
    testCompile("cglib:cglib-nodep:${cglibVersion}")
    testCompile("org.spockframework:spock-spring:${spockSpringVersion}")
    testCompile("org.spockframework:spock-core:${spockSpringVersion}")
    testCompile('org.springframework.boot:spring-boot-starter-test')
}

task wrapper(type: Wrapper) {
    gradleVersion = gradleVersion
}

test {
    testLogging {
        events 'passed', 'skipped', 'failed'
    }
}

task copyExternalDependencies(type: Copy) {
    from configurations.compile
    into "$buildDir/deps/external"
    exclude '**/fint-*.jar'
}

task copyFintDependencies(type: Copy) {
    from configurations.compile
    into "$buildDir/deps/fint"
    include '**/fint-*.jar'
}

build.dependsOn(copyExternalDependencies)
build.dependsOn(copyFintDependencies)

jar {
    manifest {
        attributes(
                "Manifest-Version": "1.0",
                "Main-Class": "no.fint.betaling.Application",
                "Specification-Version": "${version}",
                "Implementation-Version": "${version}",
                "Class-Path": configurations.compile.collect { it.getName() }.join(' ')
        )
    }
}

bootRepackage.enabled = false
